<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MingUnity_Common</name>
    </assembly>
    <members>
        <member name="M:MingUnity.Common.Loom.Initialize">
            <summary>
            初始化
            </summary>
        </member>
        <member name="T:MingUnity.Common.MonoSingleton`1">
            <summary>
            Mono单例
            </summary>
        </member>
        <member name="T:MingUnity.Common.PlatformUtility">
            <summary>
            平台通用
            </summary>
        </member>
        <member name="M:MingUnity.Common.PlatformUtility.GetResStreamingAssets(System.Boolean)">
            <summary>
            获取加载资源时streamingAssets路径
            </summary>
        </member>
        <member name="T:MingUnity.Common.Singleton`1">
            <summary>
            单例
            </summary>
        </member>
        <member name="P:MingUnity.Common.Task.Running">
            Returns true if and only if the coroutine is running.  Paused tasks  
            are considered to be running.  
        </member>
        <member name="P:MingUnity.Common.Task.Paused">
            Returns true if and only if the coroutine is currently paused.  
        </member>
        <member name="T:MingUnity.Common.Task.FinishedHandler">
            Delegate for termination subscribers.  manual is true if and only if  
            the coroutine was stopped with an explicit call to Stop().  
        </member>
        <member name="E:MingUnity.Common.Task.Finished">
            Termination event.  Triggered when the coroutine completes execution.  
        </member>
        <member name="M:MingUnity.Common.Task.#ctor(System.Collections.IEnumerator,System.Boolean)">
            Creates a new Task object for the given coroutine.  
             
            If autoStart is true (default) the task is automatically started  
            upon construction.  
        </member>
        <member name="M:MingUnity.Common.Task.Start">
            Begins execution of the coroutine  
        </member>
        <member name="M:MingUnity.Common.Task.Stop">
            Discontinues execution of the coroutine at its next yield.  
        </member>
        <member name="T:MingUnity.Common.TaskQueue">
            <summary>
            任务队列
            在某个时间点最多只有一个协程在执行，先加入队列中的先执行，后加入的后执行
            </summary>
        </member>
    </members>
</doc>
